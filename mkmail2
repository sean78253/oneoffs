#!/bin/bash
# Make an email server Mark II
#
#
# *********************************************************************
# *
# * Sean Embry
# *
# * Revision list here:
# * YYYY-MM-DD-xxx	Notes
# * YYYY-MM-DD-xxx	HOURS: INITIALS HOURS in decimal format eg: 15 minutes is 0.25
# * 2022-01-12-000	Adapt from mkmail 
# *			reformat to maintainability format standards
# *			HOURS: SWE 2.75
# * 2022-01-13-000	Various updates
# *			HOURS: SWE 0.75
# *
# * 2022-01-14-000	Various things
# *			HOURS: SWE 1.50
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *********************************************************************
# NOTES:
# Keep in mind to abstract so that new ISPs can easily be added.
# useful postfix site: https://serverfault.com/questions/243638/automate-postfix-instalaltion-with-debconf-set-selections
# useful mysql site: https://bertvv.github.io/notes-to-self/2015/11/16/automating-mysql_secure_installation/
#
#
# *********************************************************************
# TO DO
# do something with creating standard accounts with a new domain. EG:
# abuse@ webmaster@ hostmaster@ postmaster@ admin@
#
#
#
# *******************
# * DEFINE VARABLES *
# *******************
_dte=`date +%s`
_MkMailVer='2.0'
_MkMailLog='/var/log/mkmail/${_MkMailVer}'

# We are going to limit special chars in passwords from pwgen to not allow:
_PWLIMIT=\@\?\^\&\:\~\?\;\:\[\]\{\}\.\,\'\%\"\*\(\)\\\/

# **********************
# * RESOLVE VAR ISSUES *
# **********************


# *************
# * FUNCTIONS *
# *************

function hostme()
{
	domain=`uname -n`
	read -p "Current hostname is ${domain} - if this is incorrect, enter new host name: " newhost
		if [ ! -z ${newhost} ]
		then
			echo "Changing hostname to ${newhost}"
			read -p "You'll need to update the /etc/host file yourself"
			hostname="${newhost}"
			${domain}=${newhost}
			
			hnc=`which hostnamectl`
			if [ ! -z ${hnc} ]
			then
					hostnamectl set-hostname ${newhost}
				else
					echo "You'll need to adjust the hostname because hostnamectl isn't available"
					echo "It's set for postfix, but the system might be wrong"
			fi

		else
			echo "Keeping domain ${domain}"
		fi

}


function passwords()
{

# passwords for MySQL
domain=`uname -n`
mypass=`pwgen -syr ${_PWLIMIT} 10 1`
myadmin=`pwgen -syr ${_PWLIMIT} 10 1`
mymail=`pwgen -syr ${_PWLIMIT} 10 1`
echo -"

OK, I've got defaults for ya.
Domain name is being set to: ${domain} for MySQL
MySql root pass is:          ${mypass}
user mailadmin password is   ${myadmin}
user mailuser password is:   ${mymail}

"

read -p "To change them, enter anything. To keep these, press enter" trash
	if [ ! -z ${trash} ]
	then
		read -p "Mysql ROOT password: " mypass
		read -p "Mysql mailadmin password: " myadmin
		read -p "mailuser account password: " mymail
	fi
unset trash
echo "Writing passwords to ~/mkmail2.pass"
if [ -f ~/mkmail2.pass ]
	then
	echo "backing up ~/mkmail2.pass to ~/mkmail2.pass.${_dte}"
	cp ~/mkmail2.pass ~/mkmail2.pass.${_dte}
	fi
echo "
msql-root password ${mypass}
mailadmin password ${myadmin}
mailuser password ${mymail}
" > ~/mkmail2.pass

chmod 600 ~/mkmail2.pass
}

function debconfset()
{
echo "mysql-server mysql-server/root_password password ${mypass}" | debconf-set-selections
echo "mysql-server mysql-server/root_password_again password ${mypass}" | debconf-set-selections
echo "postfix postfix/mailname string ${domain}" | debconf-set-selections
echo "postfix postfix/main_mailer_type string 'Internet Site'" | debconf-set-selections

# after install, run echo PURGE | debconf-communicate <package> to secure things and not leave landminds for unwary.
}

# ****************
# * BODY OF WORK *
# ****************
clear
hostme
passwords
debconfset
# apt-get install postfix postfix-mysql dovecot-core dovecot-imapd dovecot-pop3d dovecot-lmtpd dovecot-mysql mysql-server
exit 0
