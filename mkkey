#!/bin/bash
#
#
#
# *********************************************************************
# *
# * <NAME> <INITALS>
# *
# * Revision list here:
# * YYYY-MM-DD-xxx	Notes
# * YYYY-MM-DD-xxx	HOURS: INITALS 1.25 for an hour and 15 minutes
# *
# * 2022-11-02-000	Update to new format, remove outdated shell calls
# * 2022-11-02-000	SWE 0.45
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *
# *********************************************************************
# NOTES:
# varibles that start with an underscore should be set in the DEFINE VARIABLES section and not modified elsewhere.
# puttygen openssh_private_key -o output_filename.ppk
#
#
#
# *********************************************************************
# TODOS
#
# Update for other than RSA keys
#
#
#
# *******************
# * DEFINE VARABLES *
# *******************
_dte=`date -u +%Y%m%d`
# _kylgn=1024
# _kylgn=2048
# _kylgn=4096
_kylgn=8192
# _kylgn=16384

# *****************
# * CHECK PREREQS *
# *****************

# if we have puttygen, let's go head and make a ppk file too

if [ -e /usr/bin/puttygen1 ] 
then
	havepg=0
else
	echo -e "\a\n You might want the puttygen tools\n"
fi


# **********************
# * RESOLVE VAR ISSUES *
# **********************

# *************
# * FUNCTIONS *
# *************

# ****************
# * BODY OF WORK *
# ****************

read -p "Who is this key for?: " fr

E=""
read -p "Enter Email: " E

# if [ -z $E ]
# then
	# kfn=~/.ssh/id_rsa-${fr}-${_dte}
# else
	# kfn=~/.ssh/id_rsa-${fr}-$E-${_dte}
# fi

kfn=`echo ~/.ssh/id_rsa-${fr}-$E-${_dte} | sed 's/--/-/g' | sed 's/--/-/g'`

echo "ssh-keygen -trsa -b${_kylgn} -C"${fr}-${_dte}" -f $kfn"

if [ ! -z ${havepg} ]
then
	echo "puttygen $kfn -o $kfn.ppk"
fi
