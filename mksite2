#!/bin/bash
# mksite2 - revision to original 
# 
#
#
# *********************************************************************
# *
# * Sean Embry
# * 2021-09-05
# *
# * Revision list here:
# * YYYY-MM-DD-xxx	Notes
# * 2021-09-09-000	rewrite of original script for portability
# * 2021-10-01-000	reorder for funtions
# * 2021-10-15-000      Bug touchups
# * 2021-11-30-000	commenting code
# * 2021-12-02-000	discussed with jbd, logic change for large virtual farms
# * 2021-12-10-000	discussed log rotation with cjm, pointed to need to allow
# * 			customers a directory where they can d.l their own logs
# *			be sure to change ownership so only admin or cust can get them
# * 2021-12-19-000	do default HTML files
# * 2021-12-20-000	common area for .htpasswd files ${secrets}${domain}
# * 2021-12-23-000	logic fix up neaten up, commenting
# * 2021-12-25-000	logic fix up for incorrect directories and fix non braced variables
# * 2021-12-25-001	update revision list
# * 2021-12-25-002	add comment for .htpass, add default .htaccess domain variables in script
# * 2021-12-26-000	add logic to prefix a site config with a number
# *			add robots and humans text files
# * 2021-12-27-000	Test Certbot workings
# * 2021-12-27-001	Fix SSL stanza for missing directory location
# *
# *
# *
# *
# *
# *********************************************************************
#
# project notes:
# as with a lot of bash scritps it is helpful to see variable substitution for debug with
# bash -x ./script-name
# or uncomment
# set -x
# TO DO
# fix domain count prefix to domain name to detect domains already defined under another number
# Fix loging rotation scripts for apache so they are compressed
# make user for each new domain and set ownership rights to their web dir secrets and logs
# 
#

# Most variable not set in the script go here
# where we put our virtual configs
basedir=/etc/apache2/sites-available

#directory for crypto bags like .htpass
secrets=/usr/local/etc/apache

# Virtual server log director
vslog=/var/log/apache2/

# what extention we're going to give to backup files
dte=`date +%s`

# havessl 0 = no 1 = yes
havessl=0

domain=$1

#############
# FUNCTIONS #
#############

# Tests for Apache
function baseapache()
{
apwhich=`which apache2`
	if [ -z ${apwhich} ]
	    then
		echo -e "Apache2 doesn't seem to be installed or in my path:\n${PATH}"
		exit 100
	    else
		apwhich=`apache2 -v`
	fi

if [ ! -f /etc/apache2/mods-enabled/ssl.conf ]
	then
		echo "
	   Whoops! Looks like you don't have ssl configured yet.
	   Press <ENTER> to continue, or <CTRL><C> to abort and do:
	sudo a2enmod ssl 
	   and don't forget to 
	sudo apache2ctl restart
"

		read -p "<CTRL>+<C> to exit, <ENTER> to continue without a SSL virtual server stanza"
	else
		havessl=1
	fi


# Grab the domain name if not from command line
if [ -z $domain ]
	then
		read -p "FQDN: " domain
fi

if [ -z $domain ]
    then
	echo "Please enter a FQDN"
	exit 102
fi
}

function dircheck()
{

	if [ ! -d /var/www/html/${domain} ]
        then
		echo "/var/www/html/${domain}"
		mkdir /var/www/html/${domain}
        fi

	if [ ! -d /var/log/apache2/${domain} ]
	then
		echo "/var/log/apache2/${domain}"
		mkdir /var/log/apache2/${domain}
        fi
#### need to create a basic auth sub dir
	if [ ! -d ${secrets}/${domain} ]
	then
		echo "${secrets}/${domain}"
		mkdir ${secrets}/${domain}
        fi

#### need to check for a .htpass file for secrets

# back up an exsisting config
if [ -f ${basedir}/${domain}.conf ]
        then
	        cp ${basedir}/${domain}.conf ${basedir}/${domain}.conf.{$dte}
fi

}

function countsites()
{
	if [ -d /etc/apache2 ] && [ -d /etc/apache2/sites-available ]
	then

		if [ -f /etc/apache2/sites-available/count ]
		then
			cnt=`cat /etc/apache2/sites-available/count`
		else
			echo "1" > /etc/apache2/sites-available/count
			cnt=0
		fi

	cnt=`expr ${cnt} + 1`
	echo $cnt > /etc/apache2/sites-available/count
	cnt=`printf "%0*d-" 3 $cnt`

	else
		echo "Something is wrong with /etc/apache2/site-avaliable path"
		exit 200
	fi
}

function makeit()
{
echo "
<VirtualHost *:80>

	# Please put your .htpass file here: ${secrets}/${domain} for basic auth
    ServerAdmin webmaster@${domain}
    DocumentRoot /var/www/html/${domain}
    ServerName ${domain}
    ServerAlias www.${domain} north.${domain} east.${domain} south.${domain} west.${domain} mail.${domain}
    ErrorLog \${APACHE_LOG_DIR}/${domain}/error.log
    CustomLog \${APACHE_LOG_DIR}/${domain}/access.log combined
    RewriteEngine On

    <Directory /var/www/html/${domain}>
	    Options Indexes FollowSymLinks MultiViews
	    AllowOverride FileInfo AuthConfig
	    Order allow,deny
	    allow from all

	    ErrorDocument 404 /error404.html
	    # ErrorDocument 500 /custom_50x.html
	    # ErrorDocument 502 /custom_50x.html
	    # ErrorDocument 503 /custom_50x.html
	    # ErrorDocument 504 /custom_50x.html


	    #####################################
	    # except a directory from this rule #
	    #####################################
	    #   RewriteCond %{REQUEST_URI} !/check/

	    ################################
	    # except a file from this rule #
	    ################################
	    #   RewriteCond %{REQUEST_URI} !/check/index.html

	    # These are HTML request methods we will not allow
	    RewriteCond %{REQUEST_METHOD} ^(POST|PUT|DELETE|PATCH|HEAD|CONNECT|TRACE|TRACK|OPTIONS)
	    RewriteRule .* - [F]
    </Directory>

</VirtualHost>
" 
} > ${basedir}/${cnt}${domain}.conf

function makeitssl()
{
echo "

<VirtualHost *:443>

	# Please put your .htpass file here: ${secrets}/${domain} for basic auth
	
    ServerAdmin webmaster@${domain}
    DocumentRoot /var/www/html/${domain}
    ServerName ${domain}
    ServerAlias www.${domain} north.${domain} east.${domain} south.${domain} west.${domain} mail.${domain}
    ErrorLog \${APACHE_LOG_DIR}/${domain}/ssl-error.log
    CustomLog \${APACHE_LOG_DIR}/${domain}/ssl-access.log combined
    SSLEngine on
    RewriteEngine On
    SSLCertificateFile /etc/letsencrypt/live/${domain}/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/${domain}/privkey.pem

    <Directory /var/www/html/${domain}>
            Options Indexes FollowSymLinks MultiViews
            AllowOverride FileInfo AuthConfig
            Order allow,deny
            allow from all

            ErrorDocument 404 /error404.html
            # ErrorDocument 500 /custom_50x.html
            # ErrorDocument 502 /custom_50x.html
            # ErrorDocument 503 /custom_50x.html
            # ErrorDocument 504 /custom_50x.html


            #####################################
            # except a directory from this rule #
            #####################################
            #   RewriteCond %{REQUEST_URI} !/check/

            ################################
            # except a file from this rule #
            ################################
            #   RewriteCond %{REQUEST_URI} !/check/index.html

	    # These are HTML request methods we will not allow
            RewriteCond %{REQUEST_METHOD} ^(POST|PUT|DELETE|PATCH|HEAD|CONNECT|TRACE|TRACK|OPTIONS)
            RewriteRule .* - [F]
    </Directory>

</VirtualHost>
"
} >> ${basedir}/${cnt}${domain}.conf

function defaultfiles()
{
	if [ ! -f /var/www/html/${domain}/index.html ]
	then
		echo "
<!doctype html>
<html>
  <head>
    <title>Welcome to ${domain}</title>
  </head>
  <body>
    <p><center><H1>Hello!</H1><BR>As you can see, we are setting up our server ${domain}</p>
  </body>
</html>
" > /var/www/html/${domain}/index.html
	fi

	if [ ! -f /var/www/html/${domain}/humans.txt ]
	then
		echo "
<!doctype html>
<html>
  <head>
    <title>Welcome to ${domain}</title>
  </head>
  <body>
    <p><center><H1>Hello!</H1><BR>Our team has not enabled the humans.txt function ${domain}</p>
  </body>
</html>
" > /var/www/html/${domain}/humans.txt
	fi

	if [ ! -f /var/www/html/${domain}/robots.txt ]
	then
		echo "
User-agent: *
Disallow: /DirectoriesNotToBeSearched/
" > /var/www/html/${domain}/robots.txt
	fi
}

########
# WORK #
########

baseapache
dircheck
# countsites
makeit
if [ ${havessl} -eq 1 ]
	then
	makeitssl
fi
defaultfiles
